# .github/workflows/deploy.yml
name: Deploy Astro site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  # אם הפרויקט נמצא בתיקייה אחרת (מונוריפו) עדכן כאן, למשל: apps/site
  BUILD_PATH: "."

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # זיהוי מנהל החבילות
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/${{ env.BUILD_PATH }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "lockfile=pnpm-lock.yaml" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/${{ env.BUILD_PATH }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "lockfile=yarn.lock" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "lockfile=package-lock.json" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ${{ env.BUILD_PATH }}/${{ steps.detect-package-manager.outputs.lockfile }}

      # נדרש כדי לקבל origin/base_path נכונים (גם ל־preview)
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # npm בלבד: סנכרון lockfile כדי למנוע EUSAGE
      - name: Sync lockfile (npm only)
        if: ${{ steps.detect-package-manager.outputs.manager == 'npm' }}
        run: npm install --package-lock-only
        working-directory: ${{ env.BUILD_PATH }}

      - name: Install dependencies
        working-directory: ${{ env.BUILD_PATH }}
        run: |
          if [ "${{ steps.detect-package-manager.outputs.manager }}" = "pnpm" ]; then
            pnpm i --frozen-lockfile
          elif [ "${{ steps.detect-package-manager.outputs.manager }}" = "yarn" ]; then
            yarn install --frozen-lockfile
          else
            npm ci
          fi

      - name: Build with Astro (uses Pages origin/base)
        working-directory: ${{ env.BUILD_PATH }}
        run: |
          if [ "${{ steps.detect-package-manager.outputs.manager }}" = "pnpm" ]; then
            pnpm astro build --site "${{ steps.pages.outputs.origin }}" --base "${{ steps.pages.outputs.base_path }}"
          elif [ "${{ steps.detect-package-manager.outputs.manager }}" = "yarn" ]; then
            yarn astro build --site "${{ steps.pages.outputs.origin }}" --base "${{ steps.pages.outputs.base_path }}"
          else
            npx --no-install astro build --site "${{ steps.pages.outputs.origin }}" --base "${{ steps.pages.outputs.base_path }}"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
