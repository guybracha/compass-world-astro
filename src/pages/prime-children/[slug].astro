---
// src/pages/prime-children/[slug].astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getEntryBySlug, getCollection } from "astro:content";

export const prerender = true;

const { slug } = Astro.params;

/** =========================
 *  BASE & URL helpers
 *  ========================= */

// תמיד מסתיים ב־"/"
const RAW_BASE = import.meta.env.BASE_URL || "/";
const BASE = RAW_BASE.endsWith("/") ? RAW_BASE : `${RAW_BASE}/`;

/** withBase:
 * - לא נוגע ב־https://  //cdn  data:  mailto:  tel:
 * - לא מוסיף BASE אם הוא כבר קיים בתחילת המחרוזת
 * - מצמיד BASE לנתיב שמתחיל ב־"/" או יחסי
 */
const withBase = (p: unknown = ""): string => {
  const s = String(p || "");
  if (!s) return BASE;
  if (/^(?:[a-z]+:)?\/\//i.test(s) || /^data:/i.test(s) || /^mailto:|^tel:/i.test(s)) return s;
  const baseNoLead = BASE.replace(/^\//, "");
  if (s.startsWith(BASE) || s.startsWith(`/${baseNoLead}`)) return s;
  if (s.startsWith("/")) return `${BASE}${s.slice(1)}`;
  return `${BASE}${s}`;
};

/** toImg:
 * אם זה שם קובץ בלבד → נוסיף '/legacy/prime-children' ואז נעביר דרך withBase
 */
const IMAGES_ROOT = "/legacy/prime-children";
const toImg = (p: unknown, fallback = "/images/avatar-placeholder.svg"): string => {
  let s = String(p || "");
  if (!s) s = fallback;
  const isExternal = /^(?:[a-z]+:)?\/\//i.test(s) || /^data:/i.test(s);
  if (!isExternal && !s.startsWith("/")) s = `${IMAGES_ROOT}/${s}`;
  return withBase(s);
};

/** =========================
 *  SSG paths
 *  ========================= */
export async function getStaticPaths() {
  const entries = await getCollection("prime-children");
  return entries
    .filter((e) => (e.data.kind ?? "member") !== "overview")
    .map((e) => ({ params: { slug: e.slug } }));
}

/** =========================
 *  Load entry
 *  ========================= */
const entry = await getEntryBySlug("prime-children", slug);
if (!entry) {
  return new Response(`Prime-Child not found: ${slug}`, { status: 404 });
}

const rendered = await entry.render();
const Content = rendered.Content;
const data: any = rendered.data ?? {};

/** =========================
 *  Normalized fields
 *  ========================= */
const name    = data.name ?? data.title ?? slug;
const summary = data.summary ?? data.short ?? "הפרופיל יתווסף בקרוב.";
const tags    = Array.isArray(data.tags) ? data.tags : [];
const sideRaw = (data.side ?? tags.find((t: string) => /^(hero|villain|גיבור|נבל)$/i.test(String(t)) )) ?? "";

// תרגום צד לתצוגה + צבע תגית
const sideKind = String(sideRaw).toLowerCase();
const isVillain = sideKind === "villain" || sideKind === "נבל";
const isHero    = sideKind === "hero"    || sideKind === "גיבור";
const sideText  = isVillain ? "נבל" : (isHero ? "גיבור" : (sideRaw ? String(sideRaw) : "")); // שומר טקסט אם מותאם אישית

// תמונת hero + fallback
const FALLBACK_IMG = withBase("/images/avatar-placeholder.svg");
const CANDIDATE_FROM_FRONTMATTER = data.portrait || data.image || "";
const CANDIDATE_BY_SLUG = `/legacy/prime-children/${slug}.webp`;
const heroImg = toImg(
  CANDIDATE_FROM_FRONTMATTER || CANDIDATE_BY_SLUG,
  "/images/avatar-placeholder.svg"
);

// powers: תומך גם ב־power יחיד וגם ב־powers[]
const powers: string[] = Array.isArray(data.powers)
  ? data.powers
  : (data.power ? [String(data.power)] : []);

// links: הופך קישורים יחסיים לפנימיים עם BASE
const rawLinks = Array.isArray(data.links) ? data.links : [];
const links = rawLinks
  .map((l: any) => {
    if (!l) return null;
    if (typeof l === "string") return { href: withBase(l), label: l };
    const href = l.href ? withBase(l.href) : "";
    const label = l.label ?? l.href ?? "";
    return href ? { href, label } : null;
  })
  .filter(Boolean) as { href: string; label: string }[];

// back link
const BACK_TO = withBase("prime-children/");
---

<BaseLayout title={`${name} | ילדי פריים`} class="dark">
  <main class="container py-5 text-slate-100">
    <a href={BACK_TO} class="text-white-50 d-inline-block mb-3">→ חזרה לרשימה</a>

    <article class="grid gap-4 md:grid-cols-[280px,1fr]">
      <div>
        <img
          src={heroImg}
          alt={name}
          decoding="async"
          loading="eager"
          class="img-fluid rounded-3 border border-white/10 w-100"
          onerror={`this.onerror=null;this.src='${FALLBACK_IMG}';`}
        />
        {sideText && (
          <div class="mt-3">
            <span class={`badge ${isVillain ? "bg-danger" : isHero ? "bg-success" : "bg-secondary"}`}>{sideText}</span>
          </div>
        )}
      </div>

      <section>
        <h1 class="h3 m-0 font-display-he">{name}</h1>
        {summary && <p class="mt-3">{summary}</p>}

        {powers.length > 0 && (
          <div class="mt-3">
            <h2 class="h5 mb-1">כוחות</h2>
            <ul class="mt-2 list-disc list-inside">
              {powers.map((p) => <li>{p}</li>)}
            </ul>
          </div>
        )}

        {tags.length > 0 && (
          <div class="mt-3 d-flex flex-wrap gap-2">
            {tags.map((t) => <span class="badge bg-secondary">{t}</span>)}
          </div>
        )}

        {links.length > 0 && (
          <div class="mt-3">
            <h2 class="h5 mb-1">קישורים</h2>
            <ul class="mt-2">
              {links.map((l) => (
                <li>
                  <a
                    href={l.href}
                    class="link-light text-decoration-underline"
                    target={/^https?:\/\//i.test(l.href) ? "_blank" : undefined}
                    rel={/^https?:\/\//i.test(l.href) ? "noopener noreferrer" : undefined}
                  >
                    {l.label}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        )}
      </section>
    </article>

    {Content && (
      <section class="mt-5">
        <h2 class="h5 mb-3">פרופיל</h2>
        {/** מעבירים ROOT/FALLBACK כ-data-* כדי שהסקריפט יעבוד בלי import.meta */}
        <article id="pc-mdx" class="prose text-white-80 mx-auto"
                 style="max-width: 860px;"
                 data-root={BASE}
                 data-fallback={FALLBACK_IMG}>
          <Content />
        </article>
      </section>
    )}
  </main>

  <style>
    .prose img { display:block; max-width:100%; height:auto; }
  </style>

  <script is:inline>
    // מוסיף BASE_URL לתמונות יחסיות בתוך גוף ה-MDX + lazy + fallback
    (() => {
      const host = document.getElementById('pc-mdx');
      if (!host) return;
      const ROOT = (host.dataset.root || "/").replace(/\/$/, "");
      const FALL = host.dataset.fallback || "";

      host.querySelectorAll('img').forEach((img) => {
        img.classList.add('img-fluid','rounded-3','my-3','w-100');
        if (!img.loading) img.loading = 'lazy';

        const src = img.getAttribute('src') || '';
        if (src && !/^(?:[a-z]+:)?\/\//i.test(src) && !/^data:/i.test(src)) {
          const path = src.startsWith('/') ? src : `/${src}`;
          img.src = `${ROOT}${path}`;
        }

        img.addEventListener('error', () => { if (FALL) img.src = FALL; }, { once: true });
      });
    })();
  </script>
</BaseLayout>
