---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const all = await getCollection('prime-children');

// ✅ תמיכה בתת-נתיב (GitHub Pages)
const BASE = import.meta.env.BASE_URL || "/";
const withBase = (p = "") =>
  p && !/^https?:\/\//i.test(p)
    ? `${BASE}${String(p).replace(/^\/+/, "")}`
    : p;

// overview (אם קיים)
const overviewEntry = all.find((e) => (e.data.kind ?? 'member') === 'overview');
let OverviewContent = null;
let odata: any = null;
if (overviewEntry) {
  const rendered = await overviewEntry.render();
  OverviewContent = rendered.Content;
  odata = rendered.data;
}

// חברים
const members = all
  .filter((e) => (e.data.kind ?? 'member') !== 'overview')
  .sort((a, b) => a.slug.localeCompare(b.slug));

/** עיבוד נתונים לסינון */
const RAW_PLACEHOLDER = '/images/avatar-placeholder.svg';
const PLACEHOLDER = withBase(RAW_PLACEHOLDER);
const SIDE_WORDS = new Set(['hero', 'villain']); 

/** גזירת צד מכל פריט */
function getSide(d: any): string {
  if (d.side) return String(d.side);
  if (Array.isArray(d.tags)) {
    const lower = d.tags.map((t: string) => t.toLowerCase());
    if (lower.includes('hero')) return 'גיבור';
    if (lower.includes('villain')) return 'נבל';
  }
  return '';
}

/** כוחות ייחודיים */
const powers = Array.from(new Set(
  members.map((m) => m.data.power).filter(Boolean) as string[]
)).sort((a, b) => a.localeCompare(b));

/** צדדים ייחודיים */
const sides = Array.from(new Set(
  members.map((m) => getSide(m.data)).filter(Boolean)
)).sort();

/** קטגוריות ייחודיות מתוך tags */
const categories = Array.from(new Set(
  members.flatMap((m) => (Array.isArray(m.data.tags) ? m.data.tags : []))
    .filter(Boolean)
    .filter((t) => !SIDE_WORDS.has(String(t).toLowerCase()))
)).sort((a, b) => String(a).localeCompare(String(b)));
---

<BaseLayout title="ילדי פריים | עולם המצפן" description="סקירה ורשימת חברים">
  <section class="container py-5">
    <header class="mb-4" data-reveal>
      <h1 class="h3 mb-4">ילדי פריים</h1>
      <p class="text-white-50 m-0">דור של כוחות. עולם משתנה.</p>
    </header>

    {OverviewContent && (
      <article class="card p-4 mb-4 pc-glass" data-reveal>
        {odata?.image && (
          <img
            src={withBase(odata.image)}
            alt={odata?.title ?? 'ילדי פריים'}
            class="img-fluid rounded-3 mb-3 parallax"
          />
        )}
        <OverviewContent />
      </article>
    )}

    {/** 🔎 סרגל סינון */}
    <div class="row g-3 align-items-end mb-3">
      <div class="col-12 col-md-3">
        <label for="filterSide" class="form-label small text-white-50">צד</label>
        <select id="filterSide" class="form-select bg-black text-white border-secondary">
          <option value="">הכל</option>
          {sides.map((s) => <option value={s}>{s}</option>)}
        </select>
      </div>

      <div class="col-12 col-md-3">
        <label for="filterPower" class="form-label small text-white-50">כוח</label>
        <select id="filterPower" class="form-select bg-black text-white border-secondary">
          <option value="">הכל</option>
          {powers.map((p) => <option value={p}>{p}</option>)}
        </select>
      </div>

      <div class="col-12 col-md-3">
        <label for="filterCat" class="form-label small text-white-50">קטגוריה</label>
        <select id="filterCat" class="form-select bg-black text-white border-secondary">
          <option value="">הכל</option>
          {categories.map((c) => <option value={c}>{c}</option>)}
        </select>
      </div>

      <div class="col-12 col-md-3">
        <label for="filterSearch" class="form-label small text-white-50">חיפוש</label>
        <input id="filterSearch" type="search" class="form-control bg-black text-white border-secondary" placeholder="שם, כוח או תגית…" />
      </div>
    </div>

    <div class="d-flex flex-wrap align-items-center gap-3 mb-4">
      <div class="text-white-50 small">
        תוצאות: <strong id="pcCount">{members.length}</strong>
      </div>
      <div class="ms-auto d-flex gap-2">
        <select id="sortBy" class="form-select form-select-sm bg-black text-white border-secondary" style="width:auto">
          <option value="name-asc">מיין: שם א→ת</option>
          <option value="name-desc">מיין: שם ת→א</option>
          <option value="power-asc">מיין: כוח א→ת</option>
          <option value="power-desc">מיין: כוח ת→א</option>
        </select>
        <button id="clearFilters" class="btn btn-outline-light btn-sm">נקה</button>
      </div>
    </div>

    <div class="row g-4" id="pcGrid">
      {members.length > 0 ? (
        members.map(({ slug, data }) => {
          const name = data.name ?? data.title;
          const side = getSide(data);
          const rawImg = data.image ?? PLACEHOLDER;
          const img = withBase(rawImg);
          const tagList = Array.isArray(data.tags) ? data.tags : [];
          const indexText = [name, data.power ?? '', side, ...tagList].join(' ').toLowerCase();

          return (
            <div
              class="col-sm-6 col-lg-4"
              data-reveal
              data-card
              data-name={name.toLowerCase()}
              data-power={(data.power ?? '').toLowerCase()}
              data-side={side.toLowerCase()}
              data-tags={(tagList.join(' ') || '').toLowerCase()}
              data-index={indexText}
            >
              <a
                class="card p-3 d-block h-100 pc-card pc-glow"
                href={withBase(`prime-children/${slug}/`)}
                data-tilt
              >
                <div class="pc-thumb mb-3">
                  <img src={img} alt={name} class="img-cover parallax" loading="lazy" />
                </div>

                {/* 🆕 כותרת נגישת יותר */}
                <h2 class="pc-title m-0">{name}</h2>

                <div class="mt-2 d-flex flex-wrap gap-2">
                  {side && <span class={`badge ${side === 'נבל' ? 'bg-danger' : 'bg-success'}`}>{side}</span>}
                  {data.power && <span class="badge bg-warning text-dark">{data.power}</span>}
                  {tagList.map((t) => <span class="badge bg-secondary">{t}</span>)}
                </div>
              </a>
            </div>
          );
        })
      ) : (
        <p class="text-white-50" data-reveal>
          אין עדיין דמויות של ילדי פריים. הוסף קבצים תחת <code>src/content/prime-children</code>.
        </p>
      )}
    </div>
  </section>

  <!-- 🧠 סקריפט סינון/מיון/חיפוש -->
  <script is:inline>
    (() => {
      const $  = (s) => document.querySelector(s);
      const $$ = (s) => Array.from(document.querySelectorAll(s));
      const norm = (v) => (v ?? '').toString().trim().toLowerCase();

      const selSide   = $('#filterSide');
      const selPower  = $('#filterPower');
      const selCat    = $('#filterCat');
      const inpSearch = $('#filterSearch');
      const sortSel   = $('#sortBy');
      const clearBtn  = $('#clearFilters');
      const countEl   = $('#pcCount');
      const grid      = $('#pcGrid');

      if (!grid) return;

      const cards = $$('#pcGrid [data-card]');

      function apply() {
        const side = norm(selSide?.value);
        const pow  = norm(selPower?.value);
        const cat  = norm(selCat?.value);
        const q    = norm(inpSearch?.value);

        let shown = 0;

        cards.forEach((el) => {
          const elSide = norm(el.dataset.side);
          const elPow  = norm(el.dataset.power);
          const elTags = norm(el.dataset.tags); // מחרוזת אחת של תגיות מופרדות ברווחים
          const idx    = norm(el.dataset.index);

          const okSide  = !side || elSide === side;
          const okPower = !pow  || elPow  === pow;
          const okCat   = !cat  || (cat && elTags.split(' ').includes(cat));
          const okQ     = !q    || idx.includes(q);

          const show = okSide && okPower && okCat && okQ;

          el.classList.toggle('d-none', !show);
          if (show) shown++;
        });

        if (countEl) countEl.textContent = String(shown);

        // ----- מיון בין הכרטיסים הגלויים -----
        const sortBy = sortSel?.value || 'name-asc';
        const visible = cards.filter((c) => !c.classList.contains('d-none'));

        const getKey = (el, key) => norm(el.dataset[key]);

        visible.sort((a, b) => {
          switch (sortBy) {
            case 'name-asc':   return getKey(a, 'name' ).localeCompare(getKey(b, 'name' ), 'he');
            case 'name-desc':  return getKey(b, 'name' ).localeCompare(getKey(a, 'name' ), 'he');
            case 'power-asc':  return getKey(a, 'power').localeCompare(getKey(b, 'power'), 'he');
            case 'power-desc': return getKey(b, 'power').localeCompare(getKey(a, 'power'), 'he');
            default: return 0;
          }
        });

        // הזרקה מחדש לפי הסדר
        visible.forEach((el) => grid.appendChild(el));
      }

      // האזנות
      selSide?.addEventListener('change', apply);
      selPower?.addEventListener('change', apply);
      selCat?.addEventListener('change', apply);
      sortSel?.addEventListener('change', apply);

      // דיבאונס לחיפוש
      let t = null;
      inpSearch?.addEventListener('input', () => {
        clearTimeout(t);
        t = setTimeout(apply, 120);
      });

      clearBtn?.addEventListener('click', () => {
        if (selSide)   selSide.value = '';
        if (selPower)  selPower.value = '';
        if (selCat)    selCat.value = '';
        if (sortSel)   sortSel.value = 'name-asc';
        if (inpSearch) inpSearch.value = '';
        apply();
      });

      // ריצה ראשונית
      apply();
    })();
  </script>

  <!-- 🎨 שיפורי נגישות/ניגודיות לכרטיסים והכותרות -->
  <style is:global>
    /* ===== Prime Children – Card & Title A11y upgrades ===== */

    .pc-card{
      background: #12161d;
      border: 1px solid #2a3442;
      color: #e6ebf2;
      transition: transform .15s ease, box-shadow .15s ease, border-color .15s ease, background-color .15s ease;
      border-radius: 16px;
    }
    .pc-card:hover,
    .pc-card:focus-visible{
      transform: translateY(-2px);
      box-shadow: 0 14px 36px rgba(0,0,0,.35);
      border-color: #3c4b60;
      background: #151b24;
      outline: none;
    }

    .pc-thumb img{
      border-radius: 12px;
      object-fit: cover;
    }

    .pc-title{
      color: #f3f6fb;
      font-weight: 800;
      font-size: clamp(1.05rem, 1.8vw, 1.25rem);
      letter-spacing: .2px;
      line-height: 1.2;
      margin-top: .2rem;
      text-rendering: optimizeLegibility;
      text-shadow: 0 1px 0 rgba(0,0,0,.35);
    }
    .pc-card:hover .pc-title,
    .pc-card:focus-visible .pc-title{
      color: #ffffff;
    }

    .pc-card .badge{
      border-radius: 999px;
      font-weight: 700;
      opacity: .95;
    }
    .pc-card:hover .badge,
    .pc-card:focus-visible .badge{
      opacity: 1;
    }

    @media (prefers-color-scheme: light){
      .pc-card{
        background: #f8fafc;
        border-color: #d8e0ea;
        color: #0f172a;
      }
      .pc-card:hover,
      .pc-card:focus-visible{
        background: #ffffff;
        border-color: #c8d2df;
        box-shadow: 0 12px 28px rgba(2, 6, 23, .12);
      }
      .pc-title{
        color: #0b1324;
        text-shadow: none;
      }
    }

    @media (prefers-reduced-motion: reduce){
      .pc-card{ transition: none; }
    }
  </style>
</BaseLayout>
