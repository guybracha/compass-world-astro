---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

export const prerender = true;

// BASE utils
const BASE = import.meta.env.BASE_URL || '/';
const withBase = (p = '') => {
  if (!p) return '';
  if (/^https?:\/\//i.test(p)) return p;
  if (p.startsWith(BASE)) return p;
  const b = BASE.replace(/\/+$/, '');
  const path = p.replace(/^\/+/, '');
  return `${b}/${path}`;
};

const items = (await getCollection('gallery'))
  .filter((e) => e?.data)
  .sort((a, b) => a.slug.localeCompare(b.slug));

const PLACEHOLDER = withBase('/images/avatar-placeholder.svg');

// תגיות
const tags = Array.from(
  new Set(items.flatMap((e) => Array.isArray(e.data.tags) ? e.data.tags : []).filter(Boolean))
).sort((a, b) => String(a).localeCompare(String(b)));
---

<BaseLayout title="גלריה | עולם המצפן" description="אמנות וזהות חזותית מעולם המצפן">
  <section class="container py-5" data-base={BASE}>
    <header class="mb-4" data-reveal>
      <h1 class="display-6 mb-2 gallery-title">גלריה</h1>
      <p class="text-white-50 m-0">דפדפו ביצירות אמנות, מוקאפים ואלמנטים של זהות חזותית.</p>
    </header>

    {/* 🔎 סרגל סינון */}
    <div class="row g-3 align-items-end mb-3">
      <div class="col-12 col-md-4">
        <label for="filterTag" class="form-label small text-white-50">תגית</label>
        <select id="filterTag" class="form-select bg-black text-white border-secondary">
          <option value="">הכול</option>
          {tags.map((t) => <option value={t}>{t}</option>)}
        </select>
      </div>
      <div class="col-12 col-md-5">
        <label for="filterSearch" class="form-label small text-white-50">חיפוש</label>
        <input id="filterSearch" type="search" class="form-control bg-black text-white border-secondary" placeholder="כותרת, תיאור או תגית…" />
      </div>
      <div class="col-12 col-md-3">
        <label for="sortBy" class="form-label small text-white-50">מיון</label>
        <select id="sortBy" class="form-select bg-black text-white border-secondary">
          <option value="title-asc">כותרת א→ת</option>
          <option value="title-desc">כותרת ת→א</option>
          <option value="date-desc">חדשים תחילה</option>
          <option value="date-asc">ישנים תחילה</option>
        </select>
      </div>
    </div>

    <div class="d-flex flex-wrap align-items-center gap-3 mb-4">
      <div class="text-white-50 small">
        תוצאות: <strong id="galCount">{items.length}</strong>
      </div>
      <div class="d-flex flex-wrap gap-2">
        {tags.slice(0, 10).map((t) => (
          <button class="btn btn-sm btn-outline-secondary js-chip" data-chip={t} type="button">#{t}</button>
        ))}
      </div>
    </div>

    <div class="row g-4" id="galGrid">
      {items.map(({ slug, data }) => {
        const title = (data.title ?? slug).toString();

        // תמונה: מחרוזת או אובייקט
        const rawImg = data.image;
        const img =
          typeof rawImg === 'string'
            ? withBase(rawImg.startsWith('/') ? rawImg : `/${rawImg}`)
            : (rawImg && rawImg.src)
              ? withBase(rawImg.src)
              : PLACEHOLDER;

        const cap = (data.caption ?? '').toString();
        const tagList = Array.isArray(data.tags) ? data.tags : [];
        const indexText = [title, cap, ...tagList].join(' ').toLowerCase();
        const updated = (data.updated ?? '').toString();
        const sourceUrl = withBase((data.sourceUrl ?? '').toString());
        const detailsHref = withBase(`/gallery/${slug}/`);

        return (
          <div
            class="col-12 col-sm-6 col-lg-4"
            data-card
            data-index={indexText}
            data-tags={(tagList.join(' ') || '').toLowerCase()}
            data-title={title.toLowerCase()}
            data-updated={updated}
            data-reveal
          >
            <div class="card p-3 h-100 gallery-card pc-glow" data-tilt>
              <button
                class="btn-reset gallery-thumb mb-3 js-open"
                data-src={img}
                data-title={title}
                data-caption={cap}
                aria-label={`פתח ${title}`}
                type="button"
              >
                <img
                  src={img}
                  alt={title}
                  class="img-cover parallax"
                  loading="lazy"
                  onerror={`this.onerror=null;this.src='${PLACEHOLDER}'`}
                />
              </button>

              <h2 class="h5 m-0">{title}</h2>
              {cap && <p class="text-white-50 mt-1 mb-2 small">{cap}</p>}

              {tagList.length > 0 && (
                <div class="d-flex flex-wrap gap-2">
                  {tagList.map((t) => (
                    <button type="button" class="badge bg-secondary border-0 js-chip" data-chip={t}>{t}</button>
                  ))}
                </div>
              )}

              <div class="mt-3 d-flex gap-2">
                {sourceUrl && (
                  <a href={sourceUrl} target="_blank" rel="noopener" class="btn btn-sm btn-outline-warning">
                    מקור
                  </a>
                )}
                <a href={detailsHref} class="btn btn-sm btn-outline-light">פרטים</a>
              </div>
            </div>
          </div>
        );
      })}
    </div>
  </section>

  {/* 🖼️ מודאל תצוגת תמונה */}
  <div class="modal fade" id="galModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
      <div class="modal-content" style="background:#111; color:#fff;">
        <div class="modal-header border-0">
          <h5 class="modal-title" id="galTitle"></h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="סגור"></button>
        </div>
        <div class="modal-body">
          <img id="galImg" class="img-fluid rounded-3 mb-3" alt="" />
          <p id="galCap" class="text-white-50 m-0"></p>
        </div>
      </div>
    </div>
  </div>

  {/* 🔧 לוגיקת סינון/מיון + מודאל */}
  <script is:inline>
    (() => {
      const $ = (s) => document.querySelector(s);
      const $$ = (s) => Array.from(document.querySelectorAll(s));

      const root = document.querySelector('[data-base]');
      const BASE = root?.getAttribute('data-base') || '/';
      const FALLBACK = BASE.replace(/\/+$/,'') + '/images/avatar-placeholder.svg';

      const selTag = $('#filterTag');
      const inp = $('#filterSearch');
      const sortSel = $('#sortBy');
      const countEl = $('#galCount');
      const grid = $('#galGrid');
      const cards = $$('#galGrid [data-card]');

      function apply() {
        const tag = (selTag?.value || '').toLowerCase();
        const q = (inp?.value || '').toLowerCase().trim();

        let shown = 0;
        cards.forEach((el) => {
          const tags = (el.dataset.tags || '');
          const idx = (el.dataset.index || '');
          const okTag = !tag || tags.split(' ').includes(tag);
          const okQ = !q || idx.includes(q);
          const show = okTag && okQ;
          el.classList.toggle('d-none', !show);
          if (show) shown++;
        });
        if (countEl) countEl.textContent = String(shown);

        const visible = cards.filter((c) => !c.classList.contains('d-none'));
        const by = (sortSel?.value || 'title-asc');
        const val = (el, key) => (el.dataset[key] || '').toLowerCase();

        visible.sort((a, b) => {
          switch (by) {
            case 'title-asc': return val(a, 'title').localeCompare(val(b, 'title'), 'he');
            case 'title-desc': return val(b, 'title').localeCompare(val(a, 'title'), 'he');
            case 'date-desc': return val(b, 'updated').localeCompare(val(a, 'updated'));
            case 'date-asc': return val(a, 'updated').localeCompare(val(b, 'updated'));
            default: return 0;
          }
        });
        visible.forEach((el) => grid?.appendChild(el));
      }

      // 🖼️ Modal
      const modalEl = document.getElementById('galModal');
      let modal;
      const openers = $$('.js-open');

      openers.forEach((b) => {
        b.addEventListener('click', () => {
          const src = b.getAttribute('data-src') || FALLBACK;
          const ttl = b.getAttribute('data-title') || '';
          const cap = b.getAttribute('data-caption') || '';

          const img = document.getElementById('galImg');
          const t = document.getElementById('galTitle');
          const c = document.getElementById('galCap');

          if (img) { img.src = src; img.alt = ttl; }
          if (t) t.textContent = ttl;
          if (c) c.textContent = cap;

          if (modalEl && !modal) {
            // @ts-ignore
            modal = new window.bootstrap.Modal(modalEl, {});
          }
          modal?.show();
        });
      });

      // פילטרים/מיון
      selTag?.addEventListener('change', apply);
      inp?.addEventListener('input', apply);
      sortSel?.addEventListener('change', apply);
      $$('.js-chip').forEach((btn) => {
        btn.addEventListener('click', () => {
          const v = btn.getAttribute('data-chip') || '';
          if (selTag) selTag.value = v;
          apply();
        });
      });

      apply();
    })();
  </script>

  <style is:global>
    .gallery-title {
      background: linear-gradient(90deg,#ffb703,#00d4ff 60%,#a855f7);
      -webkit-background-clip:text; background-clip:text; color:transparent;
      filter: drop-shadow(0 2px 10px rgba(255,183,3,.15));
    }
    .gallery-card { background: rgba(255,255,255,.05); border: 1px solid rgba(255,255,255,.12); transition: transform .25s ease, box-shadow .25s ease; }
    .gallery-card:hover { transform: translateY(-3px); box-shadow: 0 16px 40px rgba(0,0,0,.35); }
    .gallery-thumb { display:block; padding:0; border:0; background:none; width:100%; text-align:left; }
    .btn-reset { border:0; background:none; padding:0; }
    .img-cover { object-fit: cover; width: 100%; height: 220px; border-radius: 0.75rem; }
    .pc-glow { box-shadow: inset 0 0 0 1px rgba(255,255,255,.06); }
  </style>
</BaseLayout>
